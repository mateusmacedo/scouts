name: 'Setup Node.js and pnpm (Simple)'
description: 'Setup Node.js and pnpm with basic caching - no external scripts'
inputs:
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '20'
  pnpm-version:
    description: 'pnpm version to use'
    required: false
    default: '9.15.0'
outputs:
  cache-hit:
    description: 'Whether cache was hit'
    value: ${{ steps.pnpm-cache.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: ${{ inputs.node-version }}
        check-latest: true

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ inputs.pnpm-version }}

    - name: Verify pnpm installation
      shell: bash
      run: |
        echo "🔍 Verificando instalação do pnpm..."
        which pnpm || echo "pnpm não encontrado no PATH"
        pnpm --version || echo "Erro ao executar pnpm --version"
        echo "✅ Verificação do pnpm concluída"

    - name: Get pnpm store directory
      id: pnpm-cache-dir
      shell: bash
      run: |
        echo "🔍 Obtendo diretório de store do pnpm..."
        STORE_PATH=$(pnpm store path --silent 2>/dev/null || echo "$HOME/.pnpm-store")
        echo "STORE_PATH=$STORE_PATH" >> $GITHUB_OUTPUT
        echo "📁 Store path: $STORE_PATH"

    - name: Cache pnpm dependencies
      id: pnpm-cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.pnpm-cache-dir.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-v3-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-v3-

    - name: Configure NPM Registry
      shell: bash
      run: |
        echo "🔧 Configurando registry npm..."
        pnpm config set registry https://registry.npmjs.org/
        echo "✅ Registry configurado: $(pnpm config get registry)"

    - name: Install dependencies
      shell: bash
      run: |
        echo "📦 Instalando dependências com pnpm..."
        pnpm install --frozen-lockfile

    - name: Cache hit status
      shell: bash
      run: |
        if [ "${{ steps.pnpm-cache.outputs.cache-hit }}" = "true" ]; then
          echo "✅ pnpm cache hit - dependencies restored from cache"
        else
          echo "ℹ️ pnpm cache miss - installing dependencies from scratch"
        fi
