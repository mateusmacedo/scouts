name: 'Setup Go with optimized caching'
description: 'Setup Go with intelligent caching strategy for Go modules'
inputs:
  go-version:
    description: 'Go version to use'
    required: false
    default: '1.23'
  has-go-changes:
    description: 'Whether there are Go changes detected'
    required: false
    default: 'false'
outputs:
  cache-hit:
    description: 'Whether Go cache was hit'
    value: ${{ steps.go-cache.outputs.cache-hit }}
  go-modules-exist:
    description: 'Whether Go modules exist in the workspace'
    value: ${{ steps.go-check.outputs.go_modules_exist }}

runs:
  using: 'composite'
  steps:
    - name: Check Go modules
      id: go-check
      shell: bash
      run: |
        if [ -f "apps/user-go-service/go.sum" ] || [ -f "libs/user-go/go.sum" ]; then
          echo "go_modules_exist=true" >> $GITHUB_OUTPUT
          echo "✅ Go modules encontrados"
        else
          echo "go_modules_exist=false" >> $GITHUB_OUTPUT
          echo "ℹ️ Nenhum go.sum encontrado - pulando cache Go"
        fi

    - name: Setup Go
      uses: actions/setup-go@v5
      if: inputs.has-go-changes == 'true'
      with:
        go-version: ${{ inputs.go-version }}
        check-latest: true

    - name: Cache Go modules
      id: go-cache
      uses: ./.github/actions/cache-manager
      if: inputs.has-go-changes == 'true' && steps.go-check.outputs.go_modules_exist == 'true'
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        prefix: go
        key: ${{ hashFiles('apps/user-go-service/go.sum', 'libs/user-go/go.sum') }}

    - name: Go cache status
      shell: bash
      if: inputs.has-go-changes == 'true'
      run: |
        if [ "${{ steps.go-cache.outputs.cache-hit }}" = "true" ]; then
          echo "✅ Go cache hit - modules restored from cache"
        else
          echo "ℹ️ Go cache miss - downloading Go modules"
        fi
