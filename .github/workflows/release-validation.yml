name: Release Validation

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

env:
  NODE_VERSION: '20'
  GO_VERSION: '1.23'
  PNPM_VERSION: '9'

jobs:
  validate-release:
    name: Validate Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: |
            apps/user-go-service/go.sum
            libs/user-go/go.sum

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Set up Nx SHAs
        uses: nrwl/nx-set-shas@v4

      - name: Validate Go sync
        run: |
          echo "üîç Validando sincroniza√ß√£o Go..."
          chmod +x scripts/sync-go-versions.sh
          ./scripts/sync-go-versions.sh
          
          if [[ -n $(git status -s apps/user-go-service/go.mod apps/user-go-service/go.sum) ]]; then
            echo "‚ùå go.mod desatualizado!"
            echo "Execute: pnpm nx run scouts/user-go-service:sync-go-deps"
            git diff apps/user-go-service/go.mod
            exit 1
          fi
          echo "‚úÖ go.mod sincronizado"

      - name: Dry-run release
        run: |
          echo "üß™ Executando dry-run do Nx Release..."
          pnpm nx release --dry-run
          echo "‚úÖ Valida√ß√£o de release conclu√≠da com sucesso"
