name: Validate

on:
  workflow_call:

concurrency:
  group: validate-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  GO_VERSION: '1.23'
  PNPM_VERSION: '9'

jobs:
  validate:
    name: Validate Affected
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [lint, test, build]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: nx-${{ runner.os }}-${{ hashFiles('**/package.json', '**/pnpm-lock.yaml', 'nx.json') }}-${{ github.sha }}
          restore-keys: |
            nx-${{ runner.os }}-${{ hashFiles('**/package.json', '**/pnpm-lock.yaml', 'nx.json') }}-
            nx-${{ runner.os }}-

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-${{ runner.os }}-${{ hashFiles('**/go.sum', '**/go.mod') }}
          restore-keys: |
            go-${{ runner.os }}-

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            dist/
            apps/*/dist/
            libs/*/dist/
          key: build-${{ runner.os }}-${{ hashFiles('**/package.json', '**/tsconfig*.json') }}-${{ github.sha }}
          restore-keys: |
            build-${{ runner.os }}-${{ hashFiles('**/package.json', '**/tsconfig*.json') }}-
            build-${{ runner.os }}-

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: |
            apps/user-go-service/go.sum
            libs/user-go/go.sum

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Set up Nx SHAs
        uses: nrwl/nx-set-shas@v4

      - name: Run ${{ matrix.task }}
        run: pnpm nx affected -t ${{ matrix.task }}

      - name: Upload coverage (test only)
        if: matrix.task == 'test'
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          retention-days: 7

  check-go-sync:
    name: Check Go Dependencies Sync
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-${{ runner.os }}-${{ hashFiles('**/go.sum', '**/go.mod') }}
          restore-keys: |
            go-${{ runner.os }}-

      - name: Setup script permissions
        run: chmod +x scripts/sync-go-versions.sh

      - name: Check sync
        run: |
          ./scripts/sync-go-versions.sh

          if [[ -n $(git status -s apps/user-go-service/go.mod apps/user-go-service/go.sum) ]]; then
            echo "❌ go.mod está desatualizado!"
            echo "Execute: pnpm nx run @scouts/user-go-service:sync-go-deps"
            git diff apps/user-go-service/go.mod
            exit 1
          fi
          echo "✅ go.mod está sincronizado"
