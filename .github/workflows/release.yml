name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      version-specifier:
        description: 'Version specifier (leave empty for conventional commits)'
        required: false
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache-dependency-path: |
            apps/user-go-service/go.sum
            libs/user-go/go.sum

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Validate Go dependencies sync
        run: ./scripts/sync-go-versions.sh

      - name: Build all projects
        run: pnpm nx run-many -t build --parallel=3

      - name: Test all projects
        run: pnpm nx run-many -t test --parallel=3

      - name: Release version and changelog
        run: pnpm nx release --skip-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sync Go dependencies after versioning
        run: ./scripts/sync-go-versions.sh

      - name: Publish to NPM
        run: pnpm nx release publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push changes and tags
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git push origin main
          git push --tags
