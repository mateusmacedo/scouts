name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version-specifier:
        description: 'Version specifier (leave empty for conventional commits)'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: read

env:
  NODE_VERSION: "20"
  PNPM_VERSION: "9.15.0"
  GO_VERSION: "1.23"

jobs:
  pre-release:
    name: Pre-release Validation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm-simple
        id: node-pnpm-setup
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Setup Go
        uses: ./.github/actions/setup-go
        with:
          has-go-changes: 'true'
        id: go-setup

      - name: Restore Nx cache
        uses: ./.github/actions/restore-nx-cache
        id: nx-cache

      - name: Run dry-run release
        run: pnpm nx release version --dry-run
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload cache for release job
        uses: actions/upload-artifact@v4
        with:
          name: release-cache
          path: |
            node_modules
            $HOME/.pnpm-store
            $HOME/.cache/go-build
            $HOME/go/pkg/mod
            .nx/cache
          retention-days: 1

  release:
    name: Version and Publish Packages
    runs-on: ubuntu-latest
    needs: pre-release
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    strategy:
      matrix:
        step: [version, publish]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm-simple
        id: node-pnpm-setup
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Setup Go
        uses: ./.github/actions/setup-go
        with:
          has-go-changes: 'true'
        id: go-setup

      - name: Download release cache
        uses: actions/download-artifact@v4
        with:
          name: release-cache
          path: .

      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Configure npm authentication
        if: matrix.step == 'publish'
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > $HOME/.npmrc
          chmod 600 $HOME/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate versions and changelog
        if: matrix.step == 'version'
        run: pnpm nx release version
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Publish packages
        if: matrix.step == 'publish'
        run: pnpm nx release publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  post-release:
    name: Post-release Cleanup
    runs-on: ubuntu-latest
    needs: release
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Generate release summary
        run: |
          echo "## 🚀 Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Version generation: ${{ needs.release.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Package publishing: ${{ needs.release.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 Published packages available on npm" >> $GITHUB_STEP_SUMMARY
          echo "- 📝 Changelog updated automatically" >> $GITHUB_STEP_SUMMARY