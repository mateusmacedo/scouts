name: CI

on:
  push:
    # Remove branch restrictions - valida TODAS as branches
  pull_request:
    branches:
      - main
      - 'release/**'

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  validate:
    name: Validate & Test
    uses: ./.github/workflows/validate.yml

  trigger-release:
    name: Trigger Release (if on main)
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Trigger Release Workflow
        uses: actions/github-script@v7
        with:
          script: |
            console.log('üöÄ Triggering release workflow...');
            
            try {
              const response = await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'release.yml',
                ref: 'main',
                inputs: {
                  'dry-run': 'true',
                  'skip-validation': 'false'
                }
              });
              
              console.log('‚úÖ Release workflow triggered successfully');
              console.log('üìã Response status:', response.status);
              console.log('üìã Workflow dispatch created');
            } catch (error) {
              console.error('‚ùå Failed to trigger release workflow:', error.message);
              throw error;
            }

  dry-run-release:
    name: Dry Run Release
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    env:
      NODE_VERSION: '20'
      PNPM_VERSION: '9'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 50
          filter: tree:0

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Set up Nx SHAs
        uses: nrwl/nx-set-shas@v4

      - name: Dry run release
        run: pnpm nx release --dry-run