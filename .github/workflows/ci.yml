name: CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

env:
  NODE_VERSION: '18'
  GO_VERSION: '1.23'
  PNPM_VERSION: '9.15.0'

jobs:
  setup:
    name: Setup Workspace
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Nx
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            .nx/cache
            node_modules
            ~/.pnpm-store
            ~/.pnpm-cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml', '**/go.work', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Setup Workspace
        uses: ./.github/actions/setup-workspace
        with:
          node-version: ${{ env.NODE_VERSION }}
          go-version: ${{ env.GO_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: Fix Script Permissions
        run: |
          find ./scripts -name "*.sh" -type f -exec chmod +x {} \;
          echo "✅ Script permissions fixed"

  lint-node:
    name: Lint Node.js
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Workspace
        uses: ./.github/actions/setup-workspace
        with:
          node-version: ${{ env.NODE_VERSION }}
          go-version: ${{ env.GO_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: |
            .nx/cache
            node_modules
            ~/.pnpm-store
            ~/.pnpm-cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml', '**/go.work', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Validate Node.js
        uses: ./.github/actions/node-validation
        with:
          strategy: ${{ github.event_name == 'pull_request' && 'affected' || 'all' }}
          base-ref: ${{ github.base_ref }}

  lint-go:
    name: Lint Go
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Workspace
        uses: ./.github/actions/setup-workspace
        with:
          node-version: ${{ env.NODE_VERSION }}
          go-version: ${{ env.GO_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: |
            .nx/cache
            node_modules
            ~/.pnpm-store
            ~/.pnpm-cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml', '**/go.work', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Validate Go
        uses: ./.github/actions/go-validation
        with:
          strategy: ${{ github.event_name == 'pull_request' && 'affected' || 'all' }}
          base-ref: ${{ github.base_ref }}

  test-node:
    name: Test Node.js
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Workspace
        uses: ./.github/actions/setup-workspace
        with:
          node-version: ${{ env.NODE_VERSION }}
          go-version: ${{ env.GO_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: |
            .nx/cache
            node_modules
            ~/.pnpm-store
            ~/.pnpm-cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml', '**/go.work', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Run Node.js Tests
        run: |
          # Verificar ambiente Node.js
          echo "🔍 Verificando ambiente Node.js..."
          node --version
          pnpm --version
          
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # Verificar se a branch base existe antes de usar affected
            if git rev-parse --verify origin/${{ github.base_ref }} >/dev/null 2>&1; then
              echo "✅ Usando estratégia affected com base origin/${{ github.base_ref }}"
              pnpm nx affected --target=test --base=origin/${{ github.base_ref }} --projects=@scouts/*,express-notifier
            else
              echo "⚠️ Base branch origin/${{ github.base_ref }} not found, running all projects instead"
              pnpm nx run-many --target=test --all --projects=@scouts/*,express-notifier
            fi
          else
            echo "✅ Usando estratégia run-many para push"
            pnpm nx run-many --target=test --all --projects=@scouts/*,express-notifier
          fi

      - name: Upload Node.js Coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: node-coverage
          path: coverage/
          retention-days: 7

  test-go:
    name: Test Go
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Workspace
        uses: ./.github/actions/setup-workspace
        with:
          node-version: ${{ env.NODE_VERSION }}
          go-version: ${{ env.GO_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: |
            .nx/cache
            node_modules
            ~/.pnpm-store
            ~/.pnpm-cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml', '**/go.work', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Run Go Tests
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # Verificar se a branch base existe antes de usar affected
            if git rev-parse --verify origin/${{ github.base_ref }} >/dev/null 2>&1; then
              pnpm nx affected --target=test --base=origin/${{ github.base_ref }} --projects=scouts/user-go-service,scouts/user-go
            else
              echo "⚠️ Base branch origin/${{ github.base_ref }} not found, running all projects instead"
              pnpm nx run-many --target=test --all --projects=scouts/user-go-service,scouts/user-go
            fi
          else
            pnpm nx run-many --target=test --all --projects=scouts/user-go-service,scouts/user-go
          fi

      - name: Generate Go Coverage
        run: ./scripts/generate-go-coverage.sh

      - name: Upload Go Coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: go-coverage
          path: coverage/go/
          retention-days: 7

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint-node, lint-go]
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Workspace
        uses: ./.github/actions/setup-workspace
        with:
          node-version: ${{ env.NODE_VERSION }}
          go-version: ${{ env.GO_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: |
            .nx/cache
            node_modules
            ~/.pnpm-store
            ~/.pnpm-cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml', '**/go.work', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Build Projects
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            pnpm nx affected --target=build --base=origin/${{ github.base_ref }}
          else
            pnpm nx run-many --target=build --all
          fi

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

  coverage-report:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: [test-node, test-go]
    if: always() && (needs.test-node.result == 'success' || needs.test-go.result == 'success')
    steps:
      - name: Download Node.js Coverage
        uses: actions/download-artifact@v4
        with:
          name: node-coverage
          path: coverage/

      - name: Download Go Coverage
        uses: actions/download-artifact@v4
        with:
          name: go-coverage
          path: coverage/go/

      - name: Consolidate Coverage
        run: |
          mkdir -p coverage-reports
          cp -r coverage/* coverage-reports/ 2>/dev/null || true

      - name: Upload Consolidated Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage-reports/
          retention-days: 30
