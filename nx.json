{
  "$schema": "./node_modules/nx/schemas/nx-schema.json",
  "namedInputs": {
    "default": ["{projectRoot}/**/*", "sharedGlobals"],
    "production": [
      "default",
      "!{projectRoot}/.eslintrc.json",
      "!{projectRoot}/eslint.config.mjs",
      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
      "!{projectRoot}/tsconfig.spec.json",
      "!{projectRoot}/jest.config.[jt]s",
      "!{projectRoot}/src/test-setup.[jt]s",
      "!{projectRoot}/test-setup.[jt]s",
      "!{projectRoot}/**/*.md"
    ],
    "testing": [
      "{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?",
      "{projectRoot}/jest.config.[jt]s",
      "{projectRoot}/tsconfig.spec.json"
    ],
    "go": [
      "{projectRoot}/**/*.go",
      "{projectRoot}/go.mod",
      "{projectRoot}/go.sum",
      "{workspaceRoot}/go.work"
    ],
    "sharedGlobals": [
      "{workspaceRoot}/go.work",
      "{workspaceRoot}/pnpm-lock.yaml"
    ]
  },
  "plugins": [
    {
      "plugin": "@nx/webpack/plugin",
      "options": {
        "buildTargetName": "build",
        "serveTargetName": "serve",
        "previewTargetName": "preview",
        "buildDepsTargetName": "build-deps",
        "watchDepsTargetName": "watch-deps"
      }
    },
    {
      "plugin": "@nx/jest/plugin",
      "options": {
        "targetName": "test"
      },
      "exclude": ["*-e2e/**/*"]
    },
    "@nx-go/nx-go",
    "@nx/eslint/plugin",
  ],
  "targetDefaults": {
    "@nx/js:tsc": {
      "cache": true,
      "dependsOn": ["^build"],
      "inputs": ["production", "^production"],
      "outputs": ["{options.outputPath}"]
    },
    "build": {
      "cache": true,
      "dependsOn": ["^build"],
      "inputs": [
        "production",
        "^production",
        "{workspaceRoot}/nx.json",
        "{workspaceRoot}/tsconfig.base.json"
      ],
      "outputs": ["{workspaceRoot}/dist/{projectRoot}", "{projectRoot}/dist"]
    },
    "test": {
      "cache": true,
      "inputs": [
        "default",
        "^production",
        "testing",
        "{workspaceRoot}/jest.config.ts",
        "{workspaceRoot}/jest.preset.js"
      ],
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "coverage": true,
        "coverageReporters": ["text", "lcov", "html"],
        "coverageThreshold": {
          "global": {
            "branches": 70,
            "functions": 70,
            "lines": 70,
            "statements": 70
          }
        }
      }
    },
    "@nx/js:swc": {
      "cache": true,
      "dependsOn": ["^build"],
      "inputs": ["production", "^production"]
    },
    "check-boundaries": {
      "executor": "nx:run-commands",
      "options": {
        "command": "nx graph --file=graph.json && nx graph --affected --file=affected-graph.json"
      }
    },
    "format": {
      "executor": "nx:run-commands",
      "options": {
        "command": "biome format --write ."
      }
    }
  },
  "cacheDirectory": ".nx/cache",
  "neverConnectToCloud": true,
  "release": {
    "projectsRelationship": "independent",
    "releaseTagPattern": "{projectName}@v{version}",
    "projects": ["@scouts/*", "!@scouts/source"],
    "version": {
      "preVersionCommand": "pnpm nx run-many -t build",
      "conventionalCommits": true,
      "generatorOptions": {
        "fallbackCurrentVersionResolver": "disk"
      }
    },
    "git": {
      "commit": true,
      "tag": true,
      "commitMessage": "chore(release): publish {version}",
      "tagMessage": "chore(release): publish {version}"
    },
    "publish": {
      "projects": ["@scouts/logger-node", "@scouts/user-node", "@scouts/utils-nest", "@scouts/base-biome"]
    },
    "changelog": {
      "automaticFromRef": true,
      "createRelease": "github",
      "projectChangelogs": {
        "renderOptions": {
          "authors": true,
          "commitReferences": true,
          "versionTitleDate": true
        }
      },
      "workspaceChangelog": {
        "renderOptions": {
          "authors": true,
          "commitReferences": true,
          "versionTitleDate": true
        }
      }
    }
  }
}
